Found a 91 line (361 tokens) duplication in the following files: 
Starting at line 208 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveOval.java
Starting at line 225 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveRectangle.java

            IOException E=new IOException("EV/EP: Invalid primitive:"+tokens[0]+
                                          " programming error?");
            throw E;
        }


    }

    /** Get the control parameters of the given primitive.

        @return a vector of ParameterDescription containing each control
                parameter.
                The first parameters should always be the virtual points.

    */
    public Vector<ParameterDescription> getControls()
    {
        Vector<ParameterDescription> v=super.getControls();
        ParameterDescription pd = new ParameterDescription();

        pd.parameter=Boolean.valueOf(isFilled);
        pd.description=Globals.messages.getString("ctrl_filled");
        v.add(pd);
        pd = new ParameterDescription();
        pd.parameter=new DashInfo(dashStyle);
        pd.description=Globals.messages.getString("ctrl_dash_style");
        pd.isExtension = true;
        v.add(pd);

        return v;
    }

    /** Set the control parameters of the given primitive.
        This method is specular to getControls().
        @param v a vector of ParameterDescription containing each control
                parameter.
                The first parameters should always be the virtual points.
        @return the next index in v to be scanned (if needed) after the
            execution of this function.
    */
    public int setControls(Vector<ParameterDescription> v)
    {
        int i=super.setControls(v);
        ParameterDescription pd;

        pd=(ParameterDescription)v.get(i);
        ++i;
        // Check, just for sure...
        if (pd.parameter instanceof Boolean)
            isFilled=((Boolean)pd.parameter).booleanValue();
        else
            System.out.println("Warning: unexpected parameter!"+pd);
        pd=(ParameterDescription)v.get(i++);
        if (pd.parameter instanceof DashInfo)
            dashStyle=((DashInfo)pd.parameter).style;
        else
            System.out.println("Warning: unexpected parameter!"+pd);

        // Parameters validation and correction
        if(dashStyle>=Globals.dashNumber)
            dashStyle=Globals.dashNumber-1;
        if(dashStyle<0)
            dashStyle=0;

        return i;

    }


    /** Gets the distance (in primitive's coordinates space) between a
        given point and the primitive.
        When it is reasonable, the behaviour can be binary (polygons,
        ovals...). In other cases (lines, points), it can be proportional.
        @param px the x coordinate of the given point.
        @param py the y coordinate of the given point.
        @return the distance in logical units.
    */
    public int getDistanceToPoint(int px, int py)
    {
        // Here we check if the given point lies inside the text areas

        if(checkText(px, py))
            return 0;

        int xa=Math.min(virtualPoint[0].x,virtualPoint[1].x);
        int ya=Math.min(virtualPoint[0].y,virtualPoint[1].y);
        int xb=Math.max(virtualPoint[0].x,virtualPoint[1].x);
        int yb=Math.max(virtualPoint[0].y,virtualPoint[1].y);

        if(isFilled){
            if(GeometricDistances.pointInEllipse(xa,ya,xb-xa,yb-ya,px,py))
=====================================================================
Found a 64 line (326 tokens) duplication in the following files: 
Starting at line 129 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveBezier.java
Starting at line 122 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveLine.java

    }

    /** Get the control parameters of the given primitive.
        @return a vector of ParameterDescription containing each control
                parameter.
    */
    public Vector<ParameterDescription> getControls()
    {
        Vector<ParameterDescription> v=super.getControls();

        ParameterDescription pd = new ParameterDescription();

        pd = new ParameterDescription();
        pd.parameter=Boolean.valueOf(arrowStart);
        pd.description=Globals.messages.getString("ctrl_arrow_start");
        pd.isExtension = true;
        v.add(pd);
        pd = new ParameterDescription();
        pd.parameter=Boolean.valueOf(arrowEnd);
        pd.description=Globals.messages.getString("ctrl_arrow_end");
        pd.isExtension = true;
        v.add(pd);
        pd = new ParameterDescription();
        pd.parameter=Integer.valueOf(arrowLength);
        pd.description=Globals.messages.getString("ctrl_arrow_length");
        pd.isExtension = true;
        v.add(pd);
        pd = new ParameterDescription();
        pd.parameter=Integer.valueOf(arrowHalfWidth);
        pd.description=Globals.messages.getString("ctrl_arrow_half_width");
        pd.isExtension = true;
        v.add(pd);
        pd = new ParameterDescription();
        pd.parameter=new ArrowInfo(arrowStyle);
        pd.description=Globals.messages.getString("ctrl_arrow_style");
        pd.isExtension = true;
        v.add(pd);

        pd = new ParameterDescription();
        pd.parameter=new DashInfo(dashStyle);
        pd.description=Globals.messages.getString("ctrl_dash_style");
        pd.isExtension = true;
        v.add(pd);
        return v;
    }

    /** Set the control parameters of the given primitive.
        This method is specular to getControls().
        @param v a vector of ParameterDescription containing each control
                parameter.
                The first parameters should always be the virtual points.
        @return the next index in v to be scanned (if needed) after the
            execution of this function.
    */
    public int setControls(Vector<ParameterDescription> v)
    {
        int i=super.setControls(v);
        ParameterDescription pd;

        pd=(ParameterDescription)v.get(i++);
        if (pd.parameter instanceof Boolean)
            arrowStart=((Boolean)pd.parameter).booleanValue();
        else
            System.out.println("Warning: unexpected parameter 1!"+pd);
=====================================================================
Found a 50 line (294 tokens) duplication in the following files: 
Starting at line 188 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveBezier.java
Starting at line 808 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveComplexCurve.java

        pd=(ParameterDescription)v.get(i++);
        if (pd.parameter instanceof Boolean)
            arrowStart=((Boolean)pd.parameter).booleanValue();
        else
            System.out.println("Warning: unexpected parameter 1!"+pd);
        pd=(ParameterDescription)v.get(i++);
        if (pd.parameter instanceof Boolean)
            arrowEnd=((Boolean)pd.parameter).booleanValue();
        else
            System.out.println("Warning: unexpected parameter 2!"+pd);

        pd=(ParameterDescription)v.get(i++);
        if (pd.parameter instanceof Integer)
            arrowLength=((Integer)pd.parameter).intValue();
        else
            System.out.println("Warning: unexpected parameter 3!"+pd);

        pd=(ParameterDescription)v.get(i++);
        if (pd.parameter instanceof Integer)
            arrowHalfWidth=((Integer)pd.parameter).intValue();
        else
            System.out.println("Warning: unexpected parameter 4!"+pd);

        pd=(ParameterDescription)v.get(i++);
        if (pd.parameter instanceof ArrowInfo)
            arrowStyle=((ArrowInfo)pd.parameter).style;
        else
            System.out.println("Warning: unexpected parameter 5!"+pd);

        pd=(ParameterDescription)v.get(i++);
        if (pd.parameter instanceof DashInfo)
            dashStyle=((DashInfo)pd.parameter).style;
        else
            System.out.println("Warning: unexpected parameter 6!"+pd);

        // Parameters validation and correction
        if(dashStyle>=Globals.dashNumber)
            dashStyle=Globals.dashNumber-1;
        if(dashStyle<0)
            dashStyle=0;

        return i;
    }

    /** Draw the graphic primitive on the given graphic context.
        @param g the graphic context in which the primitive should be drawn.
        @param coordSys the graphic coordinates system to be applied.
        @param layerV the layer description.
    */
    public void draw(GraphicsInterface g, MapCoordinates coordSys,
=====================================================================
Found a 85 line (269 tokens) duplication in the following files: 
Starting at line 208 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveOval.java
Starting at line 372 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitivePolygon.java
Starting at line 225 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveRectangle.java

            IOException E=new IOException("EV/EP: Invalid primitive:"+tokens[0]+
                                          " programming error?");
            throw E;
        }


    }

    /** Get the control parameters of the given primitive.

        @return a vector of ParameterDescription containing each control
                parameter.
                The first parameters should always be the virtual points.

    */
    public Vector<ParameterDescription> getControls()
    {
        Vector<ParameterDescription> v=super.getControls();
        ParameterDescription pd = new ParameterDescription();

        pd.parameter=Boolean.valueOf(isFilled);
        pd.description=Globals.messages.getString("ctrl_filled");
        v.add(pd);
        pd = new ParameterDescription();
        pd.parameter=new DashInfo(dashStyle);
        pd.description=Globals.messages.getString("ctrl_dash_style");
        pd.isExtension = true;
        v.add(pd);

        return v;
    }

    /** Set the control parameters of the given primitive.
        This method is specular to getControls().
        @param v a vector of ParameterDescription containing each control
                parameter.
                The first parameters should always be the virtual points.
        @return the next index in v to be scanned (if needed) after the
            execution of this function.
    */
    public int setControls(Vector<ParameterDescription> v)
    {
        int i=super.setControls(v);
        ParameterDescription pd;

        pd=(ParameterDescription)v.get(i);
        ++i;
        // Check, just for sure...
        if (pd.parameter instanceof Boolean)
            isFilled=((Boolean)pd.parameter).booleanValue();
        else
            System.out.println("Warning: unexpected parameter!"+pd);
        pd=(ParameterDescription)v.get(i++);
        if (pd.parameter instanceof DashInfo)
            dashStyle=((DashInfo)pd.parameter).style;
        else
            System.out.println("Warning: unexpected parameter!"+pd);

        // Parameters validation and correction
        if(dashStyle>=Globals.dashNumber)
            dashStyle=Globals.dashNumber-1;
        if(dashStyle<0)
            dashStyle=0;

        return i;

    }


    /** Gets the distance (in primitive's coordinates space) between a
        given point and the primitive.
        When it is reasonable, the behaviour can be binary (polygons,
        ovals...). In other cases (lines, points), it can be proportional.
        @param px the x coordinate of the given point.
        @param py the y coordinate of the given point.
        @return the distance in logical units.
    */
    public int getDistanceToPoint(int px, int py)
    {
        // Here we check if the given point lies inside the text areas

        if(checkText(px, py))
            return 0;

        int xa=Math.min(virtualPoint[0].x,virtualPoint[1].x);
=====================================================================
Found a 50 line (268 tokens) duplication in the following files: 
Starting at line 139 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveBezier.java
Starting at line 743 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveComplexCurve.java
Starting at line 132 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveLine.java

        ParameterDescription pd = new ParameterDescription();

        pd = new ParameterDescription();
        pd.parameter=Boolean.valueOf(arrowStart);
        pd.description=Globals.messages.getString("ctrl_arrow_start");
        pd.isExtension = true;
        v.add(pd);
        pd = new ParameterDescription();
        pd.parameter=Boolean.valueOf(arrowEnd);
        pd.description=Globals.messages.getString("ctrl_arrow_end");
        pd.isExtension = true;
        v.add(pd);
        pd = new ParameterDescription();
        pd.parameter=Integer.valueOf(arrowLength);
        pd.description=Globals.messages.getString("ctrl_arrow_length");
        pd.isExtension = true;
        v.add(pd);
        pd = new ParameterDescription();
        pd.parameter=Integer.valueOf(arrowHalfWidth);
        pd.description=Globals.messages.getString("ctrl_arrow_half_width");
        pd.isExtension = true;
        v.add(pd);
        pd = new ParameterDescription();
        pd.parameter=new ArrowInfo(arrowStyle);
        pd.description=Globals.messages.getString("ctrl_arrow_style");
        pd.isExtension = true;
        v.add(pd);

        pd = new ParameterDescription();
        pd.parameter=new DashInfo(dashStyle);
        pd.description=Globals.messages.getString("ctrl_dash_style");
        pd.isExtension = true;
        v.add(pd);
        return v;
    }

    /** Set the control parameters of the given primitive.
        This method is specular to getControls().
        @param v a vector of ParameterDescription containing each control
                parameter.
                The first parameters should always be the virtual points.
        @return the next index in v to be scanned (if needed) after the
            execution of this function.
    */
    public int setControls(Vector<ParameterDescription> v)
    {
        int i=super.setControls(v);
        ParameterDescription pd;

        pd=(ParameterDescription)v.get(i++);
=====================================================================
Found a 41 line (233 tokens) duplication in the following files: 
Starting at line 130 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/dialogs/DialogExport.java
Starting at line 396 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/dialogs/DialogSymbolize.java

        panel.setBorder(titled);

        JButton ok=new JButton(Globals.messages.getString("Ok_btn"));
        JButton cancel=new JButton(Globals.messages.getString("Cancel_btn"));

        constraints.gridx=0;
        constraints.gridy=1;
        constraints.gridwidth=4;
        constraints.gridheight=1;
        constraints.anchor=GridBagConstraints.EAST;
        constraints.insets=new Insets(20,20,20,20);

        contentPane.add(panel, constraints);

        constraints.gridx=0;
        constraints.gridy=2;
        constraints.gridwidth=4;
        constraints.gridheight=1;
        constraints.anchor=GridBagConstraints.EAST;
        constraints.insets=new Insets(20,20,20,20);

        // Put the OK and Cancel buttons and make them active.
        Box b=Box.createHorizontalBox();
        b.add(Box.createHorizontalGlue());
        ok.setPreferredSize(cancel.getPreferredSize());

        if (Globals.okCancelWinOrder) {
            b.add(ok);
            b.add(Box.createHorizontalStrut(12));
            b.add(cancel);
        } else {
            b.add(cancel);
            b.add(Box.createHorizontalStrut(12));
            b.add(ok);
        }
        contentPane.add(b, constraints);            // Add cancel button

        ok.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent evt)
            {
=====================================================================
Found a 55 line (228 tokens) duplication in the following files: 
Starting at line 188 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveComplexCurve.java
Starting at line 187 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitivePolygon.java

        addPoint(px, py);

        // ...then we do the swap

        int dummy;

        for(int i=nPoints-1; i>minv; --i) {
            virtualPoint[i].x=virtualPoint[i-1].x;
            virtualPoint[i].y=virtualPoint[i-1].y;
        }

        virtualPoint[minv].x=px;
        virtualPoint[minv].y=py;

        changed = true;
    }

    /** Add a point at the current ComplexCurve. The point is always added
        at the end of the already existing path.
        @param x the x coordinate of the point.
        @param y the y coordinate of the point.
    */
    public void addPoint(int x, int y)
    {
        if(nPoints+2>=storageSize) {
            int o_n=storageSize;
            int i;
            storageSize += 10;
            PointG[] nv = new PointG[storageSize];
            for(i=0;i<o_n;++i) {
                nv[i]=virtualPoint[i];
            }
            for(;i<storageSize;++i) {
                nv[i]=new PointG();
            }
            virtualPoint=nv;
        }
        // And now we enter the position of the point we are interested with
        virtualPoint[nPoints].x=x;
        virtualPoint[nPoints++].y=y;
        // We do need to shift the two points describing the position
        // of the text lines
        virtualPoint[getNameVirtualPointNumber()].x=x+5;
        virtualPoint[getNameVirtualPointNumber()].y=y+5;
        virtualPoint[getValueVirtualPointNumber()].x=x+5;
        virtualPoint[getValueVirtualPointNumber()].y=y+10;
        changed = true;
    }

    /** Create the CurveStorage associated to the complex curve. This is a crude
        technique, but it is very easy to implement.
        @param coordSys the coordinate mapping to be employed.
        @return the CurveStorage approximating the complex curve.
    */
    public CurveStorage createComplexCurve(MapCoordinates coordSys)
=====================================================================
Found a 70 line (208 tokens) duplication in the following files: 
Starting at line 39 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/graphic/nil/ShapeNull.java
Starting at line 36 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/graphic/swing/ShapeSwing.java

    public ShapeNull()
    {
        s=null;
    }

    /** Create a cubic curve (Bézier).
        @param x0 the x coord. of the starting point of the Bézier curve.
        @param y0 the y coord. of the starting point of the Bézier curve.
        @param x1 the x coord. of the first handle.
        @param y1 the y coord. of the first handle.
        @param x2 the x coord. of the second handle.
        @param y2 the y coord. of the second handle.
        @param x3 the x coord. of the ending point of the Bézier curve.
        @param y3 the y coord. of the ending point of the Bézier curve.
    */
    public void createCubicCurve(int x0, int y0, int x1, int y1,
        int x2, int y2, int x3, int y3)
    {
        s = new CubicCurve2D.Float(x0, y0, x1, y1, x2, y2, x3, y3);
    }

    /** Create a general path with the given number of points.
        @param npoints the number of points.
    */
    public void createGeneralPath(int npoints)
    {
        s = new GeneralPath(GeneralPath.WIND_EVEN_ODD, npoints);
    }

    /** Obtain the bounding box of the curve.
        @return the bounding box.
    */
    public RectangleG getBounds()
    {
        Rectangle r=s.getBounds();
        return new RectangleG(r.x, r.y, r.width, r.height);
    }

    /** Move the current position to the given coordinates.
        @param x the x coordinate.
        @param y the y coordinate.
    */
    public void moveTo(float x, float y)
    {
        GeneralPath gp=(GeneralPath)s;
        gp.moveTo(x,y);
    }

    /** Add a cubic curve from the current point.
        @param x0 the x coord. of the first handle.
        @param y0 the y coord. of the first handle
        @param x1 the x coord. of the second handle.
        @param y1 the y coord. of the second handle.
        @param x2 the x coord. of the ending point of the Bézier curve.
        @param y2 the y coord. of the ending point of the Bézier curve.
    */
    public void curveTo(float x0, float y0, float x1, float y1,
        float x2, float y2)
    {
        GeneralPath gp=(GeneralPath)s;
        gp.curveTo(x0, y0,x1, y1,x2, y2);
    }

    /** Close the current path.
    */
    public void closePath()
    {
        GeneralPath gp=(GeneralPath)s;
        gp.closePath();
    }
=====================================================================
Found a 46 line (196 tokens) duplication in the following files: 
Starting at line 227 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveLine.java
Starting at line 110 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveRectangle.java

    }

    /** Draw the graphic primitive on the given graphic context.
        @param g the graphic context in which the primitive should be drawn.
        @param coordSys the graphic coordinates system to be applied.
        @param layerV the layer description.
    */
    public void draw(GraphicsInterface g, MapCoordinates coordSys,
        Vector layerV)
    {
        if(!selectLayer(g,layerV))
            return;

        drawText(g, coordSys, layerV, -1);

        if(changed) {
            changed=false;
            // in the line primitive, the first two virtual points represent
            // the beginning and the end of the segment to be drawn.
            x1=coordSys.mapX(virtualPoint[0].x,virtualPoint[0].y);
            y1=coordSys.mapY(virtualPoint[0].x,virtualPoint[0].y);
            x2=coordSys.mapX(virtualPoint[1].x,virtualPoint[1].y);
            y2=coordSys.mapY(virtualPoint[1].x,virtualPoint[1].y);

            // We store the coordinates in an ordered way in order to ease
            // the determination of the clip rectangle.
            if (x1>x2) {
                xa=x2;
                xb=x1;
            } else {
                xa=x1;
                xb=x2;
            }
            if (y1>y2) {
                ya=y2;
                yb=y1;
            } else {
                ya=y1;
                yb=y2;
            }

            // Calculate the width of the stroke in pixel. It should not
            // make our lines disappear, even at very small zoom ratios.
            // So we put a limit D_MIN.
            w = (float)(Globals.lineWidth*coordSys.getXMagnitude());
            if (w<D_MIN) w=D_MIN;
=====================================================================
Found a 49 line (186 tokens) duplication in the following files: 
Starting at line 352 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportEPS.java
Starting at line 1335 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

    }

    /** Called when exporting an arrow.
        @param x position of the tip of the arrow.
        @param y position of the tip of the arrow.
        @param xc direction of the tip of the arrow.
        @param yc direction of the tip of the arrow.
        @param l length of the arrow.
        @param h width of the arrow.
        @param style style of the arrow.
        @throws IOException when things goes horribly wrong, for example if
            the file in which the output is being done is not accessible.
    */
    public void exportArrow(double x, double y, double xc, double yc,
        double l, double h,
        int style)
        throws IOException
    {
        double s;
        double alpha;
        double x0;
        double y0;
        double x1;
        double y1;
        double x2;
        double y2;

        // At first we need the angle giving the direction of the arrow
        // a little bit of trigonometry :-)

        if (x==xc)
            alpha = Math.PI/2.0+(y-yc<0.0?0.0:Math.PI);
        else
            alpha = Math.atan((double)(y-yc)/(double)(x-xc));

        alpha += x-xc>0.0?0.0:Math.PI;

        // Then, we calculate the points for the polygon
        x0 = x - l*Math.cos(alpha);
        y0 = y - l*Math.sin(alpha);

        x1 = x0 - h*Math.sin(alpha);
        y1 = y0 + h*Math.cos(alpha);

        x2 = x0 + h*Math.sin(alpha);
        y2 = y0 - h*Math.cos(alpha);

        // Arrows are always done with dash 0
        registerDash(0);
=====================================================================
Found a 43 line (175 tokens) duplication in the following files: 
Starting at line 100 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveOval.java
Starting at line 108 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveRectangle.java

        setLayer(layer);

    }

    /** Draw the graphic primitive on the given graphic context.
        @param g the graphic context in which the primitive should be drawn.
        @param coordSys the graphic coordinates system to be applied.
        @param layerV the layer description.
    */
    public void draw(GraphicsInterface g, MapCoordinates coordSys,
        Vector layerV)
    {

        if(!selectLayer(g,layerV))
            return;

        drawText(g, coordSys, layerV, -1);

        // in the oval primitive, the first two virtual points represent
        // the two corners of the oval diagonal

        if(changed) {
            changed=false;
            x1=coordSys.mapX(virtualPoint[0].x,virtualPoint[0].y);
            y1=coordSys.mapY(virtualPoint[0].x,virtualPoint[0].y);
            x2=coordSys.mapX(virtualPoint[1].x,virtualPoint[1].y);
            y2=coordSys.mapY(virtualPoint[1].x,virtualPoint[1].y);

            // Sort the coordinates
            if (x1>x2) {
                xa=x2;
                xb=x1;
            } else {
                xa=x1;
                xb=x2;
            }
            if (y1>y2) {
                ya=y2;
                yb=y1;
            } else {
                ya=y1;
                yb=y2;
            }
=====================================================================
Found a 55 line (174 tokens) duplication in the following files: 
Starting at line 463 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveComplexCurve.java
Starting at line 95 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitivePolygon.java

    }


    /** Remove the control point of the spline closest to the given
        coordinates, if the distance is less than a certain tolerance

        @param x            the x coordinate of the target
        @param y            the y coordinate of the target
        @param tolerance    the tolerance

    */
    public void removePoint(int x, int y, double tolerance)
    {
        // We can not have a spline with less than three vertices
        if (nPoints<=3)
            return;

        int i;
        double distance;
        double min_distance= GeometricDistances.pointToPoint(virtualPoint[0].x,
                virtualPoint[0].y,x,y);
        int sel_i=-1;

        for(i=1;i<nPoints;++i) {
            distance = GeometricDistances.pointToPoint(virtualPoint[i].x,
                virtualPoint[i].y,x,y);

            if (distance<min_distance) {
                min_distance=distance;
                sel_i=i;
            }
        }

        // Check if the control node losest to the given coordinates
        // is closer than the given tolerance
        if(min_distance<=tolerance){
            --nPoints;
            for(i=0;i<nPoints;++i) {
                // Shift all the points subsequent to the one which needs
                // to be erased.
                if(i>=sel_i) {
                    virtualPoint[i].x=virtualPoint[i+1].x;
                    virtualPoint[i].y=virtualPoint[i+1].y;
                }
                changed=true;
            }
        }
    }

    /** Draw the graphic primitive on the given graphic context.
        @param g the graphic context in which the primitive should be drawn.
        @param coordSys the graphic coordinates system to be applied.
        @param layerV the layer description.
    */
    public void draw(GraphicsInterface g, MapCoordinates coordSys,
=====================================================================
Found a 40 line (171 tokens) duplication in the following files: 
Starting at line 227 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveLine.java
Starting at line 102 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveOval.java

    }

    /** Draw the graphic primitive on the given graphic context.
        @param g the graphic context in which the primitive should be drawn.
        @param coordSys the graphic coordinates system to be applied.
        @param layerV the layer description.
    */
    public void draw(GraphicsInterface g, MapCoordinates coordSys,
        Vector layerV)
    {
        if(!selectLayer(g,layerV))
            return;

        drawText(g, coordSys, layerV, -1);

        if(changed) {
            changed=false;
            // in the line primitive, the first two virtual points represent
            // the beginning and the end of the segment to be drawn.
            x1=coordSys.mapX(virtualPoint[0].x,virtualPoint[0].y);
            y1=coordSys.mapY(virtualPoint[0].x,virtualPoint[0].y);
            x2=coordSys.mapX(virtualPoint[1].x,virtualPoint[1].y);
            y2=coordSys.mapY(virtualPoint[1].x,virtualPoint[1].y);

            // We store the coordinates in an ordered way in order to ease
            // the determination of the clip rectangle.
            if (x1>x2) {
                xa=x2;
                xb=x1;
            } else {
                xa=x1;
                xb=x2;
            }
            if (y1>y2) {
                ya=y2;
                yb=y1;
            } else {
                ya=y1;
                yb=y2;
            }
=====================================================================
Found a 18 line (149 tokens) duplication in the following files: 
Starting at line 660 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 687 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            addLeadZeros(head.length()+
            obj_PDF[5].length()+
            obj_PDF[6].length()+
            obj_PDF[7].length()+
            obj_PDF[8].length()+
            fileLength +
            closeObject.length()+
            obj_PDF[4].length()+
            obj_PDF[2].length()+
            obj_PDF[1].length()+
            obj_PDF[3].length()+
            obj_PDF[9].length()+
            obj_PDF[10].length()+
            obj_PDF[11].length()+
            obj_PDF[12].length()+
            obj_PDF[13].length()+
            obj_PDF[14].length()+
            obj_PDF[15].length())+
=====================================================================
Found a 15 line (144 tokens) duplication in the following files: 
Starting at line 186 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveOval.java
Starting at line 201 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveRectangle.java

                IOException E=new IOException("bad arguments on EV/EP");
                throw E;
            }
            int x1 = virtualPoint[0].x=Integer.parseInt(tokens[1]);
            int y1 = virtualPoint[0].y=Integer.parseInt(tokens[2]);
            virtualPoint[1].x=Integer.parseInt(tokens[3]);
            virtualPoint[1].y=Integer.parseInt(tokens[4]);

            virtualPoint[getNameVirtualPointNumber()].x=x1+5;
            virtualPoint[getNameVirtualPointNumber()].y=y1+5;
            virtualPoint[getValueVirtualPointNumber()].x=x1+5;
            virtualPoint[getValueVirtualPointNumber()].y=y1+10;

            if(N>5) parseLayer(tokens[5]);
            if(tokens[0].equals("EP"))
=====================================================================
Found a 19 line (141 tokens) duplication in the following files: 
Starting at line 620 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 657 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            obj_PDF[12].length())+
            " 00000 n \n"+        // 13

            addLeadZeros(head.length()+
            obj_PDF[5].length()+
            obj_PDF[6].length()+
            obj_PDF[7].length()+
            obj_PDF[8].length()+
            fileLength +
            closeObject.length()+
            obj_PDF[4].length()+
            obj_PDF[2].length()+
            obj_PDF[1].length()+
            obj_PDF[3].length()+
            obj_PDF[9].length()+
            obj_PDF[10].length()+
            obj_PDF[11].length()+
            obj_PDF[12].length()+
            obj_PDF[13].length())+
=====================================================================
Found a 17 line (140 tokens) duplication in the following files: 
Starting at line 641 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 687 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            addLeadZeros(head.length()+
            obj_PDF[5].length()+
            obj_PDF[6].length()+
            obj_PDF[7].length()+
            obj_PDF[8].length()+
            fileLength +
            closeObject.length()+
            obj_PDF[4].length()+
            obj_PDF[2].length()+
            obj_PDF[1].length()+
            obj_PDF[3].length()+
            obj_PDF[9].length()+
            obj_PDF[10].length()+
            obj_PDF[11].length()+
            obj_PDF[12].length()+
            obj_PDF[13].length()+
            obj_PDF[14].length())+
=====================================================================
Found a 21 line (137 tokens) duplication in the following files: 
Starting at line 343 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveLine.java
Starting at line 186 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveOval.java
Starting at line 201 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveRectangle.java

                IOException E=new IOException("bad arguments on LI");
                throw E;
            }
            // Load the points in the virtual points associated to the
            // current primitive.

            int x1 = virtualPoint[0].x=Integer.parseInt(tokens[1]);
            int y1 = virtualPoint[0].y=Integer.parseInt(tokens[2]);
            virtualPoint[1].x=Integer.parseInt(tokens[3]);
            virtualPoint[1].y=Integer.parseInt(tokens[4]);

            virtualPoint[getNameVirtualPointNumber()].x=x1+5;
            virtualPoint[getNameVirtualPointNumber()].y=y1+5;
            virtualPoint[getValueVirtualPointNumber()].x=x1+5;
            virtualPoint[getValueVirtualPointNumber()].y=y1+10;

            if(N>5) parseLayer(tokens[5]);

            // FidoCadJ extensions

            if(N>6 && tokens[6].equals("FCJ")) {
=====================================================================
Found a 35 line (133 tokens) duplication in the following files: 
Starting at line 769 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveComplexCurve.java
Starting at line 230 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveOval.java
Starting at line 392 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitivePolygon.java
Starting at line 243 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveRectangle.java

        v.add(pd);

        pd = new ParameterDescription();
        pd.parameter=new DashInfo(dashStyle);
        pd.description=Globals.messages.getString("ctrl_dash_style");
        pd.isExtension = true;
        v.add(pd);

        return v;
    }

    /** Set the control parameters of the given primitive.
        This method is specular to getControls().
        @param v a vector of ParameterDescription containing each control
            parameter. The first parameters should always be the virtual
            points.
        @return the next index in v to be scanned (if needed) after the
            execution of this function.
    */
    public int setControls(Vector<ParameterDescription> v)
    {
        int i=super.setControls(v);
        ParameterDescription pd;

        pd=(ParameterDescription)v.get(i);
        ++i;
        // Check, just for sure...
        if (pd.parameter instanceof Boolean)
            isFilled=((Boolean)pd.parameter).booleanValue();
        else
            System.out.println("Warning: unexpected parameter!"+pd);

        pd=(ParameterDescription)v.get(i++);
        // Check, just for sure...
        if (pd.parameter instanceof Boolean)
=====================================================================
Found a 27 line (133 tokens) duplication in the following files: 
Starting at line 321 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveOval.java
Starting at line 332 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveRectangle.java

        cmd+=virtualPoint[0].x+" "+virtualPoint[0].y+" "+
            +virtualPoint[1].x+" "+virtualPoint[1].y+" "+
            getLayer()+"\n";

        if(extensions && (dashStyle>0 || hasName() || hasValue())) {
            String text = "0";
            if (name.length()!=0 || value.length()!=0)
                text = "1";
            cmd+="FCJ "+dashStyle+" "+text+"\n";
        }
        // The false is needed since saveText should not write the FCJ tag.
        cmd+=saveText(false);

        return cmd;
    }

    /** Export the primitive on a vector graphic format.
        @param exp the export interface to employ.
        @param cs the coordinate mapping to employ.
        @throws IOException if a problem occurs, such as it is impossible to
            write on the output file.
    */
    public void export(ExportInterface exp, MapCoordinates cs)
        throws IOException
    {
        exportText(exp, cs, -1);
        exp.exportOval(cs.mapX(virtualPoint[0].x,virtualPoint[0].y),
=====================================================================
Found a 19 line (132 tokens) duplication in the following files: 
Starting at line 602 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 638 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 657 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            obj_PDF[11].length())+
            " 00000 n \n"+        // 12


            addLeadZeros(head.length()+
            obj_PDF[5].length()+
            obj_PDF[6].length()+
            obj_PDF[7].length()+
            obj_PDF[8].length()+
            fileLength +
            closeObject.length()+
            obj_PDF[4].length()+
            obj_PDF[2].length()+
            obj_PDF[1].length()+
            obj_PDF[3].length()+
            obj_PDF[9].length()+
            obj_PDF[10].length()+
            obj_PDF[11].length()+
            obj_PDF[12].length())+
=====================================================================
Found a 16 line (131 tokens) duplication in the following files: 
Starting at line 623 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 687 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            addLeadZeros(head.length()+
            obj_PDF[5].length()+
            obj_PDF[6].length()+
            obj_PDF[7].length()+
            obj_PDF[8].length()+
            fileLength +
            closeObject.length()+
            obj_PDF[4].length()+
            obj_PDF[2].length()+
            obj_PDF[1].length()+
            obj_PDF[3].length()+
            obj_PDF[9].length()+
            obj_PDF[10].length()+
            obj_PDF[11].length()+
            obj_PDF[12].length()+
            obj_PDF[13].length())+
=====================================================================
Found a 27 line (129 tokens) duplication in the following files: 
Starting at line 100 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveOval.java
Starting at line 97 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitivePCBLine.java
Starting at line 108 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveRectangle.java

        setLayer(layer);

    }

    /** Draw the graphic primitive on the given graphic context.
        @param g the graphic context in which the primitive should be drawn.
        @param coordSys the graphic coordinates system to be applied.
        @param layerV the layer description.
    */
    public void draw(GraphicsInterface g, MapCoordinates coordSys,
        Vector layerV)
    {

        if(!selectLayer(g,layerV))
            return;

        drawText(g, coordSys, layerV, -1);

        // in the oval primitive, the first two virtual points represent
        // the two corners of the oval diagonal

        if(changed) {
            changed=false;
            x1=coordSys.mapX(virtualPoint[0].x,virtualPoint[0].y);
            y1=coordSys.mapY(virtualPoint[0].x,virtualPoint[0].y);
            x2=coordSys.mapX(virtualPoint[1].x,virtualPoint[1].y);
            y2=coordSys.mapY(virtualPoint[1].x,virtualPoint[1].y);
=====================================================================
Found a 17 line (127 tokens) duplication in the following files: 
Starting at line 82 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveOval.java
Starting at line 90 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveRectangle.java

    public PrimitiveOval(int x1, int y1, int x2, int y2, boolean f, int layer,
        int dashSt, String font, int size)
    {
        super();
        initPrimitive(-1, font, size);

        virtualPoint[0].x=x1;
        virtualPoint[0].y=y1;
        virtualPoint[1].x=x2;
        virtualPoint[1].y=y2;
        virtualPoint[getNameVirtualPointNumber()].x=x1+5;
        virtualPoint[getNameVirtualPointNumber()].y=y1+5;
        virtualPoint[getValueVirtualPointNumber()].x=x1+5;
        virtualPoint[getValueVirtualPointNumber()].y=y1+10;

        isFilled=f;
        dashStyle =dashSt;
=====================================================================
Found a 23 line (125 tokens) duplication in the following files: 
Starting at line 227 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveLine.java
Starting at line 98 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitivePCBLine.java

    }

    /** Draw the graphic primitive on the given graphic context.
        @param g the graphic context in which the primitive should be drawn.
        @param coordSys the graphic coordinates system to be applied.
        @param layerV the layer description.
    */
    public void draw(GraphicsInterface g, MapCoordinates coordSys,
        Vector layerV)
    {
        if(!selectLayer(g,layerV))
            return;

        drawText(g, coordSys, layerV, -1);

        if(changed) {
            changed=false;
            // in the line primitive, the first two virtual points represent
            // the beginning and the end of the segment to be drawn.
            x1=coordSys.mapX(virtualPoint[0].x,virtualPoint[0].y);
            y1=coordSys.mapY(virtualPoint[0].x,virtualPoint[0].y);
            x2=coordSys.mapX(virtualPoint[1].x,virtualPoint[1].y);
            y2=coordSys.mapY(virtualPoint[1].x,virtualPoint[1].y);
=====================================================================
Found a 39 line (123 tokens) duplication in the following files: 
Starting at line 523 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportEPS.java
Starting at line 1039 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            x2+" "+y2+" lineto stroke\n");
    }

    /** Called when exporting a PCBPad primitive.
        @param x the x position of the pad.
        @param y the y position of the pad.
        @param style the style of the pad (0: oval, 1: square, 2: rounded
            square).
        @param six the x size of the pad.
        @param siy the y size of the pad.
        @param indiam the hole internal diameter.
        @param layer the layer that should be used.
        @param onlyHole true if only the hole (drill) should be exported.
        @throws IOException when things goes horribly wrong, for example if
            the file in which the output is being done is not accessible.
    */
    public void exportPCBPad(int x, int y, int style, int six, int siy,
        int indiam, int layer, boolean onlyHole)
        throws IOException
    {
        double xdd;
        double ydd;

        LayerDesc l=(LayerDesc)layerV.get(layer);
        ColorInterface c=l.getColor();

        checkColorAndWidth(c, 0.33);

        // At first, draw the pad...
        if(!onlyHole) {
            switch (style) {
                case 2: // Rounded pad
                    roundRect(x-six/2.0, y-siy/2.0,
                        six, siy, 4, true);
                    break;

                case 1: // Square pad
                    xdd=(double)x-six/2.0;
                    ydd=(double)y-siy/2.0;
=====================================================================
Found a 18 line (123 tokens) duplication in the following files: 
Starting at line 585 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 620 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 638 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 657 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            obj_PDF[10].length())+
            " 00000 n \n"+        // 11


            addLeadZeros(head.length()+
            obj_PDF[5].length()+
            obj_PDF[6].length()+
            obj_PDF[7].length()+
            obj_PDF[8].length()+
            fileLength +
            closeObject.length()+
            obj_PDF[4].length()+
            obj_PDF[2].length()+
            obj_PDF[1].length()+
            obj_PDF[3].length()+
            obj_PDF[9].length()+
            obj_PDF[10].length()+
            obj_PDF[11].length())+
=====================================================================
Found a 59 line (123 tokens) duplication in the following files: 
Starting at line 950 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 307 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportSVG.java

            x2+" "+y2+" l S\n");

        if (arrowStart) exportArrow(x1, y1, x2, y2, arrowLength,
            arrowHalfWidth, arrowStyle);
        if (arrowEnd) exportArrow(x2, y2, x1, y1, arrowLength,
            arrowHalfWidth, arrowStyle);
    }

    /** Called when exporting a Macro call.
        This function can just return false, to indicate that the macro should
        be rendered by means of calling the other primitives. Please note that
        a macro does not have a reference layer, since it is defined by its
        components.

        @param x the x position of the position of the macro.
        @param y the y position of the position of the macro.
        @param isMirrored true if the macro is mirrored.
        @param orientation the macro orientation in degrees.
        @param macroName the macro name.
        @param macroDesc the macro description, in the FidoCad format.
        @param name the shown name.
        @param xn coordinate of the shown name.
        @param yn coordinate of the shown name.
        @param value the shown value.
        @param xv coordinate of the shown value.
        @param yv coordinate of the shown value.
        @param font the used font.
        @param fontSize the size of the font to be used.
        @param m the library.
        @throws IOException if a disaster happens, i.e. a file can not be
            accessed.
        @return false if the macro should be split into primitives or true
            if the export is handled entirely by this function.
    */
    public boolean exportMacro(int x, int y, boolean isMirrored,
        int orientation, String macroName, String macroDesc,
        String name, int xn, int yn, String value, int xv, int yv, String font,
        int fontSize, Map m)
        throws IOException
    {
        // The macro will be expanded into primitives.
        return false;
    }

    /** Called when exporting an Oval primitive. Specify the bounding box.

        @param x1 the x position of the first corner
        @param y1 the y position of the first corner
        @param x2 the x position of the second corner
        @param y2 the y position of the second corner.
        @param isFilled it is true if the oval should be filled.
        @param layer the layer that should be used.
        @param dashStyle dashing style.
        @param strokeWidth the width of the pen to be used when drawing.
        @throws IOException if a disaster happens, i.e. a file can not be
            accessed.
    */
    public void exportOval(int x1, int y1, int x2, int y2,
        boolean isFilled, int layer, int dashStyle, double strokeWidth)
=====================================================================
Found a 15 line (122 tokens) duplication in the following files: 
Starting at line 606 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 687 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            addLeadZeros(head.length()+
            obj_PDF[5].length()+
            obj_PDF[6].length()+
            obj_PDF[7].length()+
            obj_PDF[8].length()+
            fileLength +
            closeObject.length()+
            obj_PDF[4].length()+
            obj_PDF[2].length()+
            obj_PDF[1].length()+
            obj_PDF[3].length()+
            obj_PDF[9].length()+
            obj_PDF[10].length()+
            obj_PDF[11].length()+
            obj_PDF[12].length())+
=====================================================================
Found a 15 line (122 tokens) duplication in the following files: 
Starting at line 343 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveLine.java
Starting at line 186 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveOval.java
Starting at line 170 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitivePCBLine.java
Starting at line 201 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveRectangle.java

                IOException E=new IOException("bad arguments on LI");
                throw E;
            }
            // Load the points in the virtual points associated to the
            // current primitive.

            int x1 = virtualPoint[0].x=Integer.parseInt(tokens[1]);
            int y1 = virtualPoint[0].y=Integer.parseInt(tokens[2]);
            virtualPoint[1].x=Integer.parseInt(tokens[3]);
            virtualPoint[1].y=Integer.parseInt(tokens[4]);

            virtualPoint[getNameVirtualPointNumber()].x=x1+5;
            virtualPoint[getNameVirtualPointNumber()].y=y1+5;
            virtualPoint[getValueVirtualPointNumber()].x=x1+5;
            virtualPoint[getValueVirtualPointNumber()].y=y1+10;
=====================================================================
Found a 20 line (118 tokens) duplication in the following files: 
Starting at line 130 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/dialogs/DialogEditLayer.java
Starting at line 144 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/dialogs/EnterCircuitFrame.java

        contentPane.add(visibility, constraints);

        JButton ok = new JButton(Globals.messages.getString("Ok_btn"));
        JButton cancel = new JButton(Globals.messages.getString("Cancel_btn"));

        // Put the OK and Cancel buttons and make them active.
        Box b=Box.createHorizontalBox();
        b.add(Box.createHorizontalGlue());
        ok.setPreferredSize(cancel.getPreferredSize());

        if (Globals.okCancelWinOrder) {
            b.add(ok);
            b.add(Box.createHorizontalStrut(12));
            b.add(cancel);

        } else {
            b.add(cancel);
            b.add(Box.createHorizontalStrut(12));
            b.add(ok);
        }
=====================================================================
Found a 25 line (116 tokens) duplication in the following files: 
Starting at line 143 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveComplexCurve.java
Starting at line 141 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitivePolygon.java

    }

    /** Add the given point to the closest part of the curve.
        @param px the x coordinate of the point to add
        @param py the y coordinate of the point to add
    */
    public void addPointClosest(int px, int py)
    {
        int[] xp=new int[storageSize];
        int[] yp=new int[storageSize];

        int k;

        for(k=0;k<nPoints;++k){
            xp[k]=virtualPoint[k].x;
            yp[k]=virtualPoint[k].y;
        }
        // Calculate the distance between the
        // given point and all the segments composing the polygon and we
        // take the smallest one.

        int distance=(int)Math.sqrt((px-xp[0])*(px-xp[0])+
            (py-yp[0])*(py-yp[0]));

        int d;
=====================================================================
Found a 25 line (115 tokens) duplication in the following files: 
Starting at line 347 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveOval.java
Starting at line 358 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveRectangle.java

        exp.exportOval(cs.mapX(virtualPoint[0].x,virtualPoint[0].y),
                       cs.mapY(virtualPoint[0].x,virtualPoint[0].y),
                       cs.mapX(virtualPoint[1].x,virtualPoint[1].y),
                       cs.mapY(virtualPoint[1].x,virtualPoint[1].y),
                       isFilled,
                       getLayer(),
                       dashStyle,
                       Globals.lineWidth*cs.getXMagnitude());
    }
    /** Get the number of the virtual point associated to the Name property
        @return the number of the virtual point associated to the Name property
    */
    public int getNameVirtualPointNumber()
    {
        return 2;
    }

    /** Get the number of the virtual point associated to the Value property
        @return the number of the virtual point associated to the Value property
    */
    public  int getValueVirtualPointNumber()
    {
        return 3;
    }
}
=====================================================================
Found a 16 line (114 tokens) duplication in the following files: 
Starting at line 570 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 602 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 620 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 638 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 657 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            obj_PDF[9].length())+
            " 00000 n \n"+        // 10

            addLeadZeros(head.length()+
            obj_PDF[5].length()+
            obj_PDF[6].length()+
            obj_PDF[7].length()+
            obj_PDF[8].length()+
            fileLength +
            closeObject.length()+
            obj_PDF[4].length()+
            obj_PDF[2].length()+
            obj_PDF[1].length()+
            obj_PDF[3].length()+
            obj_PDF[9].length()+
            obj_PDF[10].length())+
=====================================================================
Found a 14 line (113 tokens) duplication in the following files: 
Starting at line 589 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 687 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            addLeadZeros(head.length()+
            obj_PDF[5].length()+
            obj_PDF[6].length()+
            obj_PDF[7].length()+
            obj_PDF[8].length()+
            fileLength +
            closeObject.length()+
            obj_PDF[4].length()+
            obj_PDF[2].length()+
            obj_PDF[1].length()+
            obj_PDF[3].length()+
            obj_PDF[9].length()+
            obj_PDF[10].length()+
            obj_PDF[11].length())+
=====================================================================
Found a 37 line (113 tokens) duplication in the following files: 
Starting at line 919 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/GraphicPrimitive.java
Starting at line 596 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/primitives/PrimitiveMacro.java

        v.add(pd);

        return v;
    }

    /** Set the control parameters of the given primitive. Each
        primitive should probably overload this version. We give here a very
        general implementation, allowing to change only virtual points.
        This method is specular to getControls().
        @param v a vector of ParameterDescription containing each control
            parameter. The first parameters should always be the virtual
            points.
        @return the index of the next parameter which remains to be read
            after this function ends.

    */
    public int setControls(Vector<ParameterDescription> v)
    {
        int i=0;
        ParameterDescription pd;
        changed=true;

        pd=(ParameterDescription)v.get(i);
        ++i;
        // Check, just for sure...
        if (pd.parameter instanceof String)
            name=((String)pd.parameter);
        else
            System.out.println("Warning: unexpected parameter!"+pd);

        pd=(ParameterDescription)v.get(i);
        ++i;
        // Check, just for sure...
        if (pd.parameter instanceof String)
            value=((String)pd.parameter);
        else
            System.out.println("Warning: unexpected parameter!"+pd);
=====================================================================
Found a 23 line (112 tokens) duplication in the following files: 
Starting at line 149 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/dialogs/DialogExport.java
Starting at line 181 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/dialogs/DialogOptions.java

        constraints.insets=new Insets(20,20,20,20);

        // Put the OK and Cancel buttons and make them active.
        Box b=Box.createHorizontalBox();
        b.add(Box.createHorizontalGlue());
        ok.setPreferredSize(cancel.getPreferredSize());

        if (Globals.okCancelWinOrder) {
            b.add(ok);
            b.add(Box.createHorizontalStrut(12));
            b.add(cancel);
        } else {
            b.add(cancel);
            b.add(Box.createHorizontalStrut(12));
            b.add(ok);
        }
        contentPane.add(b, constraints);            // Add cancel button

        ok.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent evt)
            {
                int selection;
=====================================================================
Found a 58 line (112 tokens) duplication in the following files: 
Starting at line 627 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportEPS.java
Starting at line 1135 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            out.write("stroke\n");
        }
    }

    /** Called when exporting a Curve primitive.
        @param vertices array containing the position of each vertex.
        @param nVertices number of vertices.
        @param isFilled true if the polygon is filled.
        @param isClosed true if the curve is closed.
        @param layer the layer that should be used.
        @param arrowStart true if an arrow is present at the first point.
        @param arrowEnd true if an arrow is present at the second point.
        @param arrowStyle the style of the arrow.
        @param arrowLength the length of the arrow.
        @param arrowHalfWidth the half width of the arrow.
        @param dashStyle dashing style.
        @param strokeWidth the width of the pen to be used when drawing.
        @throws IOException when things goes horribly wrong, for example if
            the file in which the output is being done is not accessible.

        @return false if the curve should be rendered using a polygon, true
            if it is handled by the function.
    */
    public boolean exportCurve(PointDouble[] vertices, int nVertices,
        boolean isFilled, boolean isClosed, int layer,
        boolean arrowStart,
        boolean arrowEnd,
        int arrowStyle,
        int arrowLength,
        int arrowHalfWidth,
        int dashStyle,
        double strokeWidth)
        throws IOException
    {
        return false;
    }

    /** Called when exporting a Rectangle primitive.
        @param x1 the x position of the first corner
        @param y1 the y position of the first corner
        @param x2 the x position of the second corner
        @param y2 the y position of the second corner
        @param isFilled it is true if the rectangle should be filled
        @param layer the layer that should be used
        @param dashStyle dashing style
        @param strokeWidth the width of the pen to be used when drawing
        @throws IOException when things goes horribly wrong, for example if
            the file in which the output is being done is not accessible.
    */
    public void exportRectangle(int x1, int y1, int x2, int y2,
        boolean isFilled, int layer, int dashStyle, double strokeWidth)
        throws IOException
    {
        LayerDesc l=(LayerDesc)layerV.get(layer);
        ColorInterface c=l.getColor();

        checkColorAndWidth(c, strokeWidth);
        registerDash(dashStyle);
=====================================================================
Found a 39 line (112 tokens) duplication in the following files: 
Starting at line 1332 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 663 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportSVG.java

                outt.write(""+dash[dashStyle]+" 0 d\n");

        }
    }

    /** Called when exporting an arrow.
        @param x position of the tip of the arrow.
        @param y position of the tip of the arrow.
        @param xc direction of the tip of the arrow.
        @param yc direction of the tip of the arrow.
        @param l length of the arrow.
        @param h width of the arrow.
        @param style style of the arrow.
        @throws IOException if a disaster happens, i.e. a file can not be
            accessed.
    */
    public void exportArrow(double x, double y, double xc, double yc,
        double l, double h,
        int style)
        throws IOException
    {
        double s;
        double alpha;
        double x0;
        double y0;
        double x1;
        double y1;
        double x2;
        double y2;

        // At first we need the angle giving the direction of the arrow
        // a little bit of trigonometry :-)

        if (x==xc)
            alpha = Math.PI/2.0+(y-yc<0.0?0.0:Math.PI);
        else
            alpha = Math.atan((double)(y-yc)/(double)(x-xc));

        alpha += x-xc>0.0?0.0:Math.PI;
=====================================================================
Found a 23 line (111 tokens) duplication in the following files: 
Starting at line 181 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/dialogs/DialogOptions.java
Starting at line 415 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/dialogs/DialogSymbolize.java

            new Insets(6,20,20,20));

        // Put the OK and Cancel buttons and make them active.
        Box b=Box.createHorizontalBox();
        b.add(Box.createHorizontalGlue());
        ok.setPreferredSize(cancel.getPreferredSize());

        if (Globals.okCancelWinOrder) {
            b.add(ok);
            b.add(Box.createHorizontalStrut(12));
            b.add(cancel);

        } else {
            b.add(cancel);
            b.add(Box.createHorizontalStrut(12));
            b.add(ok);
        }
        contentPane.add(b, constraints);            // Add cancel button

        ok.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent evt)
            {
=====================================================================
Found a 36 line (110 tokens) duplication in the following files: 
Starting at line 352 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportEPS.java
Starting at line 674 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportSVG.java

    }

    /** Called when exporting an arrow.
        @param x position of the tip of the arrow.
        @param y position of the tip of the arrow.
        @param xc direction of the tip of the arrow.
        @param yc direction of the tip of the arrow.
        @param l length of the arrow.
        @param h width of the arrow.
        @param style style of the arrow.
        @throws IOException when things goes horribly wrong, for example if
            the file in which the output is being done is not accessible.
    */
    public void exportArrow(double x, double y, double xc, double yc,
        double l, double h,
        int style)
        throws IOException
    {
        double s;
        double alpha;
        double x0;
        double y0;
        double x1;
        double y1;
        double x2;
        double y2;

        // At first we need the angle giving the direction of the arrow
        // a little bit of trigonometry :-)

        if (x==xc)
            alpha = Math.PI/2.0+(y-yc<0.0?0.0:Math.PI);
        else
            alpha = Math.atan((double)(y-yc)/(double)(x-xc));

        alpha += x-xc>0.0?0.0:Math.PI;
=====================================================================
Found a 37 line (105 tokens) duplication in the following files: 
Starting at line 347 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportEPS.java
Starting at line 304 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPGF.java

            x2+" "+y2+" lineto stroke\n");
        if (arrowStart) exportArrow(x1, y1, x2, y2, arrowLength,
            arrowHalfWidth, arrowStyle);
        if (arrowEnd) exportArrow(x2, y2, x1, y1, arrowLength,
            arrowHalfWidth, arrowStyle);
    }

    /** Called when exporting an arrow.
        @param x position of the tip of the arrow.
        @param y position of the tip of the arrow.
        @param xc direction of the tip of the arrow.
        @param yc direction of the tip of the arrow.
        @param l length of the arrow.
        @param h width of the arrow.
        @param style style of the arrow.
        @throws IOException when things goes horribly wrong, for example if
            the file in which the output is being done is not accessible.
    */
    public void exportArrow(double x, double y, double xc, double yc,
        double l, double h,
        int style)
        throws IOException
    {
        double s;
        double alpha;
        double x0;
        double y0;
        double x1;
        double y1;
        double x2;
        double y2;

        // At first we need the angle giving the direction of the arrow
        // a little bit of trigonometry :-)

        if (x==xc)
            alpha = Math.PI/2.0+(y-yc<0.0?0.0:Math.PI);
=====================================================================
Found a 15 line (105 tokens) duplication in the following files: 
Starting at line 556 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 585 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 602 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 620 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 638 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 657 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            obj_PDF[3].length())+
            " 00000 n \n"+        // 9

            addLeadZeros(head.length()+
            obj_PDF[5].length()+
            obj_PDF[6].length()+
            obj_PDF[7].length()+
            obj_PDF[8].length()+
            fileLength +
            closeObject.length()+
            obj_PDF[4].length()+
            obj_PDF[2].length()+
            obj_PDF[1].length()+
            obj_PDF[3].length()+
            obj_PDF[9].length())+
=====================================================================
Found a 13 line (104 tokens) duplication in the following files: 
Starting at line 573 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java
Starting at line 687 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/export/ExportPDF.java

            addLeadZeros(head.length()+
            obj_PDF[5].length()+
            obj_PDF[6].length()+
            obj_PDF[7].length()+
            obj_PDF[8].length()+
            fileLength +
            closeObject.length()+
            obj_PDF[4].length()+
            obj_PDF[2].length()+
            obj_PDF[1].length()+
            obj_PDF[3].length()+
            obj_PDF[9].length()+
            obj_PDF[10].length())+
=====================================================================
Found a 15 line (100 tokens) duplication in the following files: 
Starting at line 375 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/circuit/controllers/ParserActions.java
Starting at line 392 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/circuit/controllers/ParserActions.java
Starting at line 408 of /Users/davidebucci/Desktop/Perso/FidoCadJ/src/net/sourceforge/fidocadj/circuit/controllers/ParserActions.java

                                g=new PrimitiveRectangle(macroFont,
                                    macroFontSize);

                                for(l=0; l<j+1; ++l)
                                    old_tokens[l+old_j+1]=tokens[l];

                                old_j+=j+1;
                                g.parseTokens(old_tokens, old_j+1);
                                g.setSelected(selectNew);
                                if(old_j>2 && old_tokens[old_j].equals("1")) {
                                    macro_counter = 2;
                                } else {
                                    model.addPrimitive(g,false,null);
                                }
                            } else if (hasFCJ && (old_tokens[0].equals("EV")||

